# Program NAME
NAME = do-op

# Compiler
CC = cc

# Compile option
CFLAGS = -Wall -Wextra -Werror

# Source files
SOURCES = $(wildcard srcs/*.c)

# Header files
HEADER = header.h

# Object files generated by the compiler
OBJECTS = $(SOURCES:.c=.o)

# Default rule
all: $(NAME)

# Target rule
$(NAME): $(OBJECTS)
	$(CC) $(CFLAGS) $(SOURCES) -o $@

# Generic rule from source files to object files ($< = 1ere dependance)
%.o: %.c $(HEADER)
	$(CC) $(CFLAGS) -c $< -o $@

# Object files cleaner
clean:
	rm -f $(OBJECTS)

# Library cleaner
fclean: clean
	rm -f $(NAME)

# All project cleaner, then rebuild it
re: fclean all

# Phony targets
.PHONY: all clean fclean re