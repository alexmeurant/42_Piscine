# Program NAME
NAME = libft.a

# Compiler
CC = gcc

# Compile option
CFLAGS = -Wall -Wextra -Werror

# Source files
SOURCES =\
	srcs/ft_putchar.c \
	srcs/ft_swap.c \
	srcs/ft_putstr.c \
	srcs/ft_strlen.c \
	srcs/ft_strcmp.c

# Header files
INCLUDE = includes
HEADER = $(INCLUDE)/ft.h

# Object files generated by the compiler
OBJECTS = $(SOURCES:.c=.o)

# Default rule
all: $(NAME)

# Target rule ($@ = NAME / $^ = toutes les dependances)
$(NAME): $(OBJECTS)
	ar rcs $@ $^

# Generic rule from source files to object files ($< = 1ere dependance)
%.o: %.c $(HEADER)
	$(CC) $(CFLAGS) -I$(INCLUDE) -c $< -o $@

# Object files cleaner
clean:
	rm -f $(OBJECTS)

# Library cleaner
fclean: clean
	rm -f $(NAME)

# All project cleaner, then rebuild it
re: fclean all

# Phony targets
.PHONY: all clean fclean re